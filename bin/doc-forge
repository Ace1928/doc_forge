#!/usr/bin/env python3
# ðŸŒ€ Eidosian Documentation System - Direct Command Interface

"""
Doc Forge - Direct Command Line Interface

This script serves as a standalone executable for the Doc Forge system,
allowing users to run it directly as 'doc-forge' when properly installed
or symlinked to their PATH. It follows Eidosian principles of minimal
friction and universal access.
"""

import os
import sys
from pathlib import Path

# Robust path resolution to handle any execution environment
def find_package_root() -> Path:
    """Find the doc_forge package root with Eidosian precision."""
    # Start with the script directory
    script_dir = Path(__file__).resolve().parent
    
    # First possibility: script is in a bin directory next to src
    if (script_dir.parent / "src" / "doc_forge").is_dir():
        return script_dir.parent
        
    # Second possibility: script is in PATH, use working directory
    if (Path.cwd() / "src" / "doc_forge").is_dir():
        return Path.cwd()
        
    # Third possibility: script is in a bin or scripts dir in the repo
    for parent in script_dir.parents:
        if (parent / "src" / "doc_forge").is_dir():
            return parent
    else:
        return script_dir
            
    # Last resort: just return script's parent and hope for the best
    return script_dir.parent

# Find package root and add to path
package_root = find_package_root()
sys.path.insert(0, str(package_root))

# Try different import strategies
try:
    # First try importing from installed package
    import doc_forge
    main = doc_forge.main
except ImportError:
    try:
        # Then try importing from source
        sys.path.insert(0, str(package_root / "src"))
        import doc_forge
        main = doc_forge.main
    except ImportError:
        # Last resort: direct import from expected location
        sys.path.insert(0, str(package_root / "src" / "doc_forge"))
        from doc_forge import main

if __name__ == "__main__":
    sys.exit(main())
